{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","user/pages/Auth.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","ErrorModal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","i","arguments","length","source","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","fromState","inputData","formValidity","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","email","password","formState","inputHandler","setFormData","authSubmitHandler","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","asOverlay","undefined","prevMode"],"mappings":"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","file":"static/js/4.08966850.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react'\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n            case 'TOUCH': {\n                return {\n                    ...state,\n                    isTouched: true\n                }\n            }\n        default:\n            return state;\n    }\n};\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue || '',\n        isTouched: false,\n        isValid: props.initialValid || false\n    });\n    \n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput]);\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE', \n            val: event.target.value, \n            validators: props.validators\n        });\n    };\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        });\n    };\n\n    const element = \n        props.element === 'input' ? ( \n            <input \n                id={props.id} \n                type={props.type} \n                placeholder={props.placeholder} \n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n            /> \n        ) : ( \n            <textarea \n                id={props.id} \n                rows={props.rows || 3} \n                onChange={changeHandler} \n                onBlur={touchHandler}\n                value={inputState.value} \n            /> \n        );\n\n    return (\n        <div \n            className={`form-control ${!inputState.isValid && inputState.isTouched &&\n                'form-control--invalid' }`}\n        >\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\nexport default Input\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n      case 'INPUT_CHANGE':\n        let formIsValid = true;\n        for (const inputId in state.inputs) {\n          if (!state.inputs[inputId]) {\n            continue;\n          }\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && action.isValid;\n          } else {\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\n          }\n        }\n        return {\n          ...state,\n          inputs: {\n            ...state.inputs,\n            [action.inputId]: { value: action.value,  isValid: action.isValid }\n          },\n          isValid: formIsValid\n        };\n    case 'SET_DATA':\n        return {\n            inputs: action.inputs,\n            isValid: action.formIsValid\n        };\n      default:\n        return state;\n    }\n  };\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [fromState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n          type: 'INPUT_CHANGE', \n          value: value, \n          isValid: isValid, \n          inputId: id\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, []);\n\n    return [fromState, inputHandler, setFormData]\n};\n","import React, { useRef, useState, useEffect } from 'react'\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n\n    const filePickerRef = useRef();\n\n    useEffect(() => {\n        if (!file) {\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    }, [file])\n\n    const pickedHandler = event => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if (event.target.files && event.target.files.length === 1) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n    };\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n\n    return (\n        <div className=\"form-control\">\n            <input \n                id={props.id}\n                ref={filePickerRef}\n                style={{display: 'none'}} \n                type=\"file\" \n                accept=\".jpg,.png,.jpeg\"\n                onChange={pickedHandler}\n            />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n                    {!previewUrl && <p>Please pick an image.</p>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>\n                    Pick Image\n                </Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p>}\n        </div>\n    )\n}\n\nexport default ImageUpload\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth.context';\nimport 'dotenv';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"sourceRoot":""}